/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.EmployerJPanel;

import Business.Business;
import Department.Department;
import Employment.Employment;
import StudentJobQueue.StudentJob;
import UserAccounts.UserAccounts;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hi
 */
public class PromotionJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PromotionJPanel
     */
    Business business;
    UserAccounts userAccounts;
    Department dept;
    DefaultTableModel jobTableModel;
    public PromotionJPanel() {
        initComponents();
    }
    
    public PromotionJPanel(Business business, UserAccounts userAccounts, Department dept) {
        initComponents();
        
        this.business = business;
        this.userAccounts = userAccounts;
        this.dept = dept;
        this.jobTableModel = (DefaultTableModel) jobTable.getModel();
        
        displayStudents();
    }
    
    public void displayStudents(){
        studentComboBox.removeAllItems();
        for(StudentJob s: this.business.getStudentJobDirectory().getStudentJobDirectory()){
         
              if(s.getApplicationStatus().equals("Accepted")){
                  studentComboBox.addItem(s.getStudentid());
              } 
          
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        studentComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobTable = new javax.swing.JTable();
        promoteBtn = new javax.swing.JButton();
        showBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Promote Students");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 24, -1, -1));

        add(studentComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 81, 109, -1));

        jLabel2.setText("Select Student:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 81, -1, -1));

        jobTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Employer", "Job ID", "Job Role", "Job Position"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jobTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 420, 180));

        promoteBtn.setText("Promote ");
        promoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promoteBtnActionPerformed(evt);
            }
        });
        add(promoteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, -1, -1));

        showBtn.setText("Show");
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });
        add(showBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void promoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promoteBtnActionPerformed
        // TODO add your handling code here:
        /*
        int selectedRow = jobTable.getSelectedRow();
        if(selectedRow>=0){
            String selectedJobId = jobTable.getValueAt(selectedRow, 4).toString();
            //ArrayList<StudentJob> studentJobList = this.business.getStudentJobDirectory().getStudentJobDirectory();
            ArrayList<Employment> empList = this.business.getJobRequestDirectory().getEmploymentList();
            for(int i=0; i<empList.size();i++){
                String jobId = empList.get(i).getStudentJobs().getJobId();
                
                if(jobId == selectedJobId){
                    Employment emp = empList.get(i);
                    emp.setStatus(false);
                    StudentJob sj = emp.getStudentJobs();
                    sj.setApplicationStatus("Accepted");
                    emp.setStudentJobs(sj);
                    this.business.getStudentJobDirectory().updateJobStatus(this.userAccounts.getEmployerId(), sj);
                }
            }
            JOptionPane.showMessageDialog(null, "Accepted");
        }
        */
        int selectedRow = jobTable.getSelectedRow();
        if(selectedRow>=0){
            String selectedJobId = jobTable.getValueAt(selectedRow, 4).toString();
              ArrayList<Employment> empList = this.business.getJobRequestDirectory().getEmploymentList();
            
            for(int i=0; i<empList.size();i++){
                String jobId = empList.get(i).getStudentJobs().getJobId();
                
                if(jobId == selectedJobId){
                    Employment emp = empList.get(i);
                    StudentJob sj = emp.getStudentJobs();
                    if(sj.getJobPosition().equals("Fresher")){
                        sj.setJobPosition("Team Lead");
                        JOptionPane.showMessageDialog(null, "Congratulations on being promoted to Team Lead");
                    } else if (sj.getJobPosition().equals("Team Lead")){
                        sj.setJobPosition("Head");
                        JOptionPane.showMessageDialog(null, "Congratulations on being promoted to Head");
                    } else {
                        JOptionPane.showMessageDialog(null, "Cannot be promoted further");
                    }

                    emp.setStudentJobs(sj);
                    this.business.getStudentJobDirectory().updateJobStatus(this.userAccounts.getEmployerId(), sj);
                }
            }
           
        }
        
        ArrayList<StudentJob> studs = this.business.getStudentJobDirectory().getStudentJobDirectory();
        
        if(studs.size()>0){ 
            jobTableModel.setRowCount(0);
            
            for(StudentJob s: studs){
                
                Object row[] = new Object[10];
                
                row[0] = s.getStudentid();
                row[1] = s.getEmployerName();
                row[2] = s.getJobId();
                row[3] = s.getJobRole();
                row[4] = s.getJobPosition();
                
                jobTableModel.addRow(row);
            
          }
        }
    }//GEN-LAST:event_promoteBtnActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentJob> studs = this.business.getStudentJobDirectory().getStudentJobDirectory();
        
        if(studs.size()>0){ 
            jobTableModel.setRowCount(0);
            
            for(StudentJob s: studs){
                
                Object row[] = new Object[10];
                
                row[0] = s.getStudentid();
                row[1] = s.getEmployerName();
                row[2] = s.getJobId();
                row[3] = s.getJobRole();
                row[4] = s.getJobPosition();
                
                jobTableModel.addRow(row);
            
          }
        }
    }//GEN-LAST:event_showBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jobTable;
    private javax.swing.JButton promoteBtn;
    private javax.swing.JButton showBtn;
    private javax.swing.JComboBox<String> studentComboBox;
    // End of variables declaration//GEN-END:variables
}
