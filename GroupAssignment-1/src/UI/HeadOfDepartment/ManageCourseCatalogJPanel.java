/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HeadOfDepartment;

import Business.Business;
import CourseCatalog.Course;
import CourseCatalog.CourseCatalog;
import Department.Department;
import UserAccounts.UserAccounts;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class ManageCourseCatalogJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseCatalogJPanel
     */
    
    
    Business business;
    UserAccounts userAccounts;
    DefaultTableModel viewTableModel;
    Course selectedCourse;
        
        
    public ManageCourseCatalogJPanel() {
        initComponents();
    }

    ManageCourseCatalogJPanel(Business business, UserAccounts userAccounts) {
        initComponents();
        this.setVisible(true);
        this.business = business;
        this.userAccounts = userAccounts;
        this.viewTableModel = (DefaultTableModel) courseCatalogTable.getModel();
        
        displayCourseCatalog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        courseName = new javax.swing.JTextField();
        courseCredits = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseCatalogTable = new javax.swing.JTable();
        addCourse = new javax.swing.JButton();
        deleteCourse = new javax.swing.JButton();
        updateCourse = new javax.swing.JButton();
        viewCourse = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        coursePrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        courseName1 = new javax.swing.JTextField();
        courseCredits1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        totalCourseCost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        coursePrice1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Course Catalog");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, -1));

        jLabel4.setText("Course Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        jLabel7.setText("Course Credits");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));
        add(courseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 90, -1));
        add(courseCredits, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 90, -1));

        courseCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Id", "Course Name", "Course Credits", "Course Price/Credit", "Total Course Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(courseCatalogTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 680, 210));

        addCourse.setText("Add Course");
        addCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseActionPerformed(evt);
            }
        });
        add(addCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        deleteCourse.setText("Delete Course");
        deleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseActionPerformed(evt);
            }
        });
        add(deleteCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 470, -1, -1));

        updateCourse.setText("Update Course");
        updateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCourseActionPerformed(evt);
            }
        });
        add(updateCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 620, -1, -1));

        viewCourse.setText("View Course");
        viewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCourseActionPerformed(evt);
            }
        });
        add(viewCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, -1, -1));

        jLabel6.setText("Course Price/Credit");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 100, -1));
        add(coursePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 90, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Add Course");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        jLabel5.setText("Course Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        jLabel8.setText("Course Credits");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, -1, -1));

        courseName1.setEnabled(false);
        add(courseName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, 90, -1));
        add(courseCredits1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 90, -1));

        jLabel9.setText("Course Price/Credit");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 100, -1));

        totalCourseCost.setEnabled(false);
        add(totalCourseCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 570, 90, -1));

        jLabel3.setText("Total Course Cost");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 570, -1, -1));
        add(coursePrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, 90, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("Update Course");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseActionPerformed
        // TODO add your handling code here:
        
        String name = courseName.getText();
        String credits = courseCredits.getText();
        String price = coursePrice.getText();
        
        
//        CourseCatalog courseCtlg = this.business.getCourseCatalogDirectory();
        ArrayList<Department> department = this.business.getDepartmentDirectory().getDepartmentList();
        
        for ( Department d : department ){
            if (d.getName()==userAccounts.getDeptName()){

                if(d.getCourseCatalog().findCourseByName(name)!= null){
            
                    JOptionPane.showMessageDialog(null, "Course already exists!!!");
                }
            else {
                d.getCourseCatalog().createCourse(name,Integer.valueOf(credits),Integer.valueOf(price),userAccounts.getDeptName());
                JOptionPane.showMessageDialog(null, "Course Created!!!");
            }
            }
            
        }
        
        
        
        
//        if(courseCtlg.findCourseByName(name)!= null){
//            
//            JOptionPane.showMessageDialog(null, "Course already exists!!!");
//        }
//        else {
//            courseCtlg.createCourse(name,Integer.valueOf(credits),Integer.valueOf(price),userAccounts.getDeptName());
//            JOptionPane.showMessageDialog(null, "Course Created!!!");
//        }
//        
        displayCourseCatalog();
        
    }//GEN-LAST:event_addCourseActionPerformed

    private void viewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCourseActionPerformed
        // TODO add your handling code here:
        int selectedRow = courseCatalogTable.getSelectedRow();
        
        if(selectedRow >= 0){
            this.selectedCourse = (Course) courseCatalogTable.getValueAt(selectedRow, 0);
            
            courseName1.setText(String.valueOf(this.selectedCourse.getName()));
            courseCredits1.setText(String.valueOf(this.selectedCourse.getCredits()));
            coursePrice1.setText(String.valueOf(this.selectedCourse.getCreditPrice()));
            totalCourseCost.setText(String.valueOf(this.selectedCourse.getCoursePrice()));
                   
        }
        else{
            JOptionPane.showMessageDialog(null, "No row selected");
        }
    }//GEN-LAST:event_viewCourseActionPerformed

    private void updateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCourseActionPerformed
        // TODO add your handling code here:
        
        if( courseName1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Make to selection for update");
        }
        else{
            
            Course c = this.business.getCourseCatalogDirectory().findCourseByName(courseName1.getText());
            c.setCredits(Integer.valueOf(courseCredits1.getText()));
            c.setCreditPrice(Integer.valueOf(coursePrice1.getText())); 
            
            this.selectedCourse.setCredits(Integer.valueOf(courseCredits1.getText()));
            this.selectedCourse.setCreditPrice(Integer.valueOf(coursePrice1.getText()));
        }
        
        displayCourseCatalog();
        
    }//GEN-LAST:event_updateCourseActionPerformed

    private void deleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseActionPerformed
        // TODO add your handling code here:
        int selectedRow  =  courseCatalogTable.getSelectedRow();
        
        if(selectedRow >= 0){
            //delete the object
            this.selectedCourse = (Course) courseCatalogTable.getValueAt(selectedRow,0);
            this.business.getCourseCatalogDirectory().deleteCourse(selectedCourse.getCourseId());

        }
        
        displayCourseCatalog();
    }//GEN-LAST:event_deleteCourseActionPerformed

    
    private void displayCourseCatalog() {
        
//        CourseCatalog crsCatalog = this.business.getCourseCatalogDirectory();
        ArrayList<Department> department = this.business.getDepartmentDirectory().getDepartmentList();
        
        
        for ( Department d : department ){
            if (d.getName()==userAccounts.getDeptName()){
                if(d.getCourseCatalog().getCourselist().size()>0){
                               viewTableModel.setRowCount(0);
            
                for(Course c: d.getCourseCatalog().getCourselist()){
//                if(c.getDepartment()==userAccounts.getDeptName()){
                    Object row[] = new Object[5];
                
                    row[0]=c;
                    row[1]=c.getName();
                    row[2]=c.getCredits();
                    row[3]=c.getCreditPrice();
                    row[4]=c.getCoursePrice();
                
                
                    viewTableModel.addRow(row);   
//                }
                } 
            }
            else
            {
                System.out.println("Empty List");   
            }
        }
    }
    }
//                if(d.getCourseCatalog().findCourseByName(name)!= null){
//            
//                    JOptionPane.showMessageDialog(null, "Course already exists!!!");
//                }
//            else {
//                d.getCourseCatalog().createCourse(name,Integer.valueOf(credits),Integer.valueOf(price),userAccounts.getDeptName());
//                JOptionPane.showMessageDialog(null, "Course Created!!!");
//            }
//            }
//            
//        }
//        if(crsCatalog.getCourselist().size()>0){
//            viewTableModel.setRowCount(0);
//            
//            for(Course c: crsCatalog.getCourselist()){
////                if(c.getDepartment()==userAccounts.getDeptName()){
//                    Object row[] = new Object[5];
//                
//                    row[0]=c;
//                    row[1]=c.getName();
//                    row[2]=c.getCredits();
//                    row[3]=c.getCreditPrice();
//                    row[4]=c.getCoursePrice();
//                
//                
//                    viewTableModel.addRow(row);   
////                }
//            }        
//        }
//        else
//        {
//            System.out.println("Empty List");   
//        }
//        
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourse;
    private javax.swing.JTable courseCatalogTable;
    private javax.swing.JTextField courseCredits;
    private javax.swing.JTextField courseCredits1;
    private javax.swing.JTextField courseName;
    private javax.swing.JTextField courseName1;
    private javax.swing.JTextField coursePrice;
    private javax.swing.JTextField coursePrice1;
    private javax.swing.JButton deleteCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField totalCourseCost;
    private javax.swing.JButton updateCourse;
    private javax.swing.JButton viewCourse;
    // End of variables declaration//GEN-END:variables

}
