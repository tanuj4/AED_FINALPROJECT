/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HeadOfDepartment;

import Business.Business;
import CourseCatalog.Course;
import Department.Department;
import FacultyProfile.Faculty;
import UserAccounts.UserAccounts;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class ManageCourseOfferJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseOfferJPanel
     */
    
    Business business;
    UserAccounts userAccounts;
    Department dept;
    DefaultTableModel viewTableModel;
    Course selectedCourse;
    
    public ManageCourseOfferJPanel() {
        initComponents();
    }

    ManageCourseOfferJPanel(Business business, UserAccounts userAccounts,Department dept) {
        initComponents();
        this.setVisible(true);
        this.business = business;
        this.userAccounts = userAccounts;
        this.dept = dept;
        populateComboBoxes();
        populateCourseFields();
        this.viewTableModel = (DefaultTableModel) courseOffer.getModel();
        displayCourseFacultyTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addCourseOffer = new javax.swing.JButton();
        courseComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        courseName = new javax.swing.JTextField();
        courseSem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        facultyComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseOffer = new javax.swing.JTable();
        deleteCourseSchedule = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Course Offer");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, -1, -1));

        jLabel3.setText("Course Id");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        jLabel6.setText("Semester");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        addCourseOffer.setText("Assign Faculty");
        addCourseOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseOfferActionPerformed(evt);
            }
        });
        add(addCourseOffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, -1, 20));

        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });
        add(courseComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 90, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("Assign Faculty to Course");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        jLabel4.setText("Course Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        courseName.setEnabled(false);
        add(courseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 90, -1));

        courseSem.setEnabled(false);
        add(courseSem, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 90, -1));

        jLabel7.setText("Faculty");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        facultyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyComboBoxActionPerformed(evt);
            }
        });
        add(facultyComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 90, -1));

        courseOffer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Id", "Course Name", "Semester", "Faculty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(courseOffer);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 600, 210));

        deleteCourseSchedule.setText("Delete Course Schedule");
        deleteCourseSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseScheduleActionPerformed(evt);
            }
        });
        add(deleteCourseSchedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addCourseOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseOfferActionPerformed
        // TODO add your handling code here:
        
        Course c = (Course) courseComboBox.getSelectedItem();
        courseName.setText(c.getName());
        courseSem.setText(c.getSem().getSemName());
        
        courseComboBox.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Course c = (Course) courseComboBox.getSelectedItem();
                courseName.setText(c.getName());
                courseSem.setText(c.getSem().getSemName());
            }
        });
        String facultyName = (String) facultyComboBox.getSelectedItem();
        
        
        c.getFaculty().setName(facultyName);
        displayCourseFacultyTable();

    }//GEN-LAST:event_addCourseOfferActionPerformed

    private void displayCourseFacultyTable() {
        ArrayList<Department> department = this.business.getDepartmentDirectory().getDepartmentList();
        
        
        for ( Department d : department ){
            if (d.getName()==userAccounts.getDeptName()){
                if(d.getCourseCatalog().getCourselist().size()>0){
                    viewTableModel.setRowCount(0);
            
                for(Course c: d.getCourseCatalog().getCourselist()){
                    if(c.getFaculty().getName() != null && !(c.getFaculty().getName().isEmpty())){
                        Object row[] = new Object[4];
                        row[0]=c;
                        row[1]=c.getName();
                        row[2]=c.getSem().getSemName();
                        row[3]=c.getFaculty().getName();
                        viewTableModel.addRow(row); 
                    }   
                    else{
                        System.out.println("Empty List");
                    }
                } 
                
            }
            else
            {
                System.out.println("Empty List");   
            }
        }
    }
    }
    
    private void populateComboBoxes() {
        courseComboBox.removeAllItems();
        ArrayList<Department> department = this.business.getDepartmentDirectory().getDepartmentList();
        ArrayList<Faculty> faculty = this.business.getFacultyDirectory().getFacultyList();
        
        courseComboBox.removeAllItems();
        facultyComboBox.removeAllItems();
        
        for ( Department d : department ){
            if (d.getName()==userAccounts.getDeptName()){
                if(d.getCourseCatalog().getCourselist().size()>0){
            
                for(Course c: d.getCourseCatalog().getCourselist()){
                    courseComboBox.addItem(c);
                } 
            }
            else
            {
                System.out.println("Empty List");   
            }
        }
            
//        courseName.setText(TOOL_TIP_TEXT_KEY);
        }
        
        for(Faculty f: faculty){
            if(f.getDepartmentName()==userAccounts.getDeptName()){
                facultyComboBox.addItem(f.getName());
            }
            else{
                System.out.println("No Faculty assigned to this department");
            }
           
        }
    }
    
    private void populateCourseFields() {
        try {
            Course c = (Course) courseComboBox.getSelectedItem();
            courseName.setText(c.getName());
            courseSem.setText(c.getSem().getSemName());
        
            courseComboBox.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Course c = (Course) courseComboBox.getSelectedItem();

                courseName.setText(c.getName());
                courseSem.setText(c.getSem().getSemName());
            }
            });
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage());
        }
    }
    
    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_courseComboBoxActionPerformed

    private void facultyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facultyComboBoxActionPerformed

    private void deleteCourseScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseScheduleActionPerformed
        // TODO add your handling code here:
        int selectedRow  =  courseOffer.getSelectedRow();
        
        if(selectedRow >= 0){
            //delete the object
            this.selectedCourse = (Course) courseOffer.getValueAt(selectedRow,0);
            
            selectedCourse.getFaculty().setName(null);
            viewTableModel.removeRow(selectedRow);
        }
        else{
            JOptionPane.showMessageDialog(null, "No row selected");
        }
        
        displayCourseFacultyTable();
        
    }//GEN-LAST:event_deleteCourseScheduleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseOffer;
    private javax.swing.JComboBox courseComboBox;
    private javax.swing.JTextField courseName;
    private javax.swing.JTable courseOffer;
    private javax.swing.JTextField courseSem;
    private javax.swing.JButton deleteCourseSchedule;
    private javax.swing.JComboBox facultyComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables



}
